# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build on PR
on:
  pull_request:
    branches: [master]

jobs:
  #  Quality:
  #    runs-on: ubuntu-latest
  #    steps:
  #    - uses: actions/checkout@v4.1.1
  #    - uses: actions/setup-python@v5.0.0
  #      with:
  #        python-version: 3.12.1
  #    - name: Install Python Poetry
  #      uses: abatilo/actions-poetry@v2.4.0
  #      with:
  #        poetry-version: 1.1.2
  #    - name: Configure poetry
  #      shell: bash
  #      run: python -m poetry config virtualenvs.in-project true
  #    - name: View poetry version
  #      run: poetry --version
  #    - name: Install dependencies
  #      run: |
  #        python -m poetry install
  #    - name: Lint with flake8
  #      run: |
  #        # stop the build if there are Python syntax errors or undefined names
  #        python -m poetry run flake8 . --exclude .venv --count --select=E9,F63,F7,F82 --show-source --statistics
  #        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
  #        python -m poetry run flake8 . --exclude .venv --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  #    - name: Test with pytest
  #      run: |
  #        python -m poetry run python -m pytest -v tests

  Build-Publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4.1.4

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # v3.3.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Login to GitHub Container Registry
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20 # v3.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=pr
            type=sha, format=long

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5.3.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
